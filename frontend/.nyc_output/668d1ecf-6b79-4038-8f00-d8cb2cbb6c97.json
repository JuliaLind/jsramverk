{"/home/juli22/dbwebb-kurser/jsramverk-alla/jsramverk/vue-project-j/playwright.config.js":{"path":"/home/juli22/dbwebb-kurser/jsramverk-alla/jsramverk/vue-project-j/playwright.config.js","statementMap":{"0":{"start":{"line":6,"column":4},"end":{"line":6,"column":31}},"1":{"start":{"line":18,"column":15},"end":{"line":108,"column":1}},"2":{"start":{"line":109,"column":0},"end":{"line":109,"column":24}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":33}},"type":"cond-expr","locations":[{"start":{"line":32,"column":28},"end":{"line":32,"column":29}},{"start":{"line":32,"column":32},"end":{"line":32,"column":33}}],"line":32},"1":{"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":41}},"type":"cond-expr","locations":[{"start":{"line":34,"column":28},"end":{"line":34,"column":29}},{"start":{"line":34,"column":32},"end":{"line":34,"column":41}}],"line":34},"2":{"loc":{"start":{"line":104,"column":13},"end":{"line":104,"column":69}},"type":"cond-expr","locations":[{"start":{"line":104,"column":30},"end":{"line":104,"column":56}},{"start":{"line":104,"column":59},"end":{"line":104,"column":69}}],"line":104}},"s":{"0":1,"1":1,"2":1},"f":{},"b":{"0":[0,1],"1":[0,1],"2":[0,1]},"inputSourceMap":{"version":3,"names":["devices","require","config","testDir","timeout","expect","forbidOnly","process","env","CI","retries","workers","undefined","reporter","use","actionTimeout","baseURL","trace","headless","projects","name","webServer","command","port","reuseExistingServer","module","exports"],"sources":["playwright.config.js"],"sourcesContent":["// @ts-check\nconst { devices } = require('@playwright/test')\n\n/**\n * Read environment variables from file.\n * https://github.com/motdotla/dotenv\n */\n// require('dotenv').config();\n\n/**\n * @see https://playwright.dev/docs/test-configuration\n * @type {import('@playwright/test').PlaywrightTestConfig}\n */\nconst config = {\n  testDir: './e2e',\n  /* Maximum time one test can run for. */\n  timeout: 30 * 1000,\n  expect: {\n    /**\n     * Maximum time expect() should wait for the condition to be met.\n     * For example in `await expect(locator).toHaveText();`\n     */\n    timeout: 5000\n  },\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: 'html',\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Maximum time each action such as `click()` can take. Defaults to 0 (no limit). */\n    actionTimeout: 0,\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    baseURL: 'http://localhost:5173',\n\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: 'on-first-retry',\n\n    /* Only on CI systems run the tests headless */\n    headless: !!process.env.CI\n  },\n\n  /* Configure projects for major browsers */\n  projects: [\n    {\n      name: 'chromium',\n      use: {\n        ...devices['Desktop Chrome']\n      }\n    },\n    {\n      name: 'firefox',\n      use: {\n        ...devices['Desktop Firefox']\n      }\n    },\n    {\n      name: 'webkit',\n      use: {\n        ...devices['Desktop Safari']\n      }\n    }\n\n    /* Test against mobile viewports. */\n    // {\n    //   name: 'Mobile Chrome',\n    //   use: {\n    //     ...devices['Pixel 5'],\n    //   },\n    // },\n    // {\n    //   name: 'Mobile Safari',\n    //   use: {\n    //     ...devices['iPhone 12'],\n    //   },\n    // },\n\n    /* Test against branded browsers. */\n    // {\n    //   name: 'Microsoft Edge',\n    //   use: {\n    //     channel: 'msedge',\n    //   },\n    // },\n    // {\n    //   name: 'Google Chrome',\n    //   use: {\n    //     channel: 'chrome',\n    //   },\n    // },\n  ],\n\n  /* Folder for test artifacts such as screenshots, videos, traces, etc. */\n  // outputDir: 'test-results/',\n\n  /* Run your local dev server before starting the tests */\n  webServer: {\n    /**\n     * Use the dev server by default for faster feedback loop.\n     * Use the preview server on CI for more realistic testing.\n     */\n    command: process.env.CI ? 'vite preview --port 5173' : 'vite dev',\n    port: 5173,\n    reuseExistingServer: !process.env.CI\n  }\n}\n\nmodule.exports = config\n"],"mappings":";;AAAA;AACA,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAG;EACbC,OAAO,EAAE,OAAO;EAChB;EACAC,OAAO,EAAE,EAAE,GAAG,IAAI;EAClBC,MAAM,EAAE;IACN;AACJ;AACA;AACA;IACID,OAAO,EAAE;EACX,CAAC;EACD;EACAE,UAAU,EAAE,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,EAAE;EAC5B;EACAC,OAAO,EAAEH,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC;EAC/B;EACAE,OAAO,EAAEJ,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,CAAC,GAAGG,SAAS;EACvC;EACAC,QAAQ,EAAE,MAAM;EAChB;EACAC,GAAG,EAAE;IACH;IACAC,aAAa,EAAE,CAAC;IAChB;IACAC,OAAO,EAAE,uBAAuB;IAEhC;IACAC,KAAK,EAAE,gBAAgB;IAEvB;IACAC,QAAQ,EAAE,CAAC,CAACX,OAAO,CAACC,GAAG,CAACC;EAC1B,CAAC;EAED;EACAU,QAAQ,EAAE,CACR;IACEC,IAAI,EAAE,UAAU;IAChBN,GAAG,EAAE;MACH,GAAGd,OAAO,CAAC,gBAAgB;IAC7B;EACF,CAAC,EACD;IACEoB,IAAI,EAAE,SAAS;IACfN,GAAG,EAAE;MACH,GAAGd,OAAO,CAAC,iBAAiB;IAC9B;EACF,CAAC,EACD;IACEoB,IAAI,EAAE,QAAQ;IACdN,GAAG,EAAE;MACH,GAAGd,OAAO,CAAC,gBAAgB;IAC7B;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CACD;;EAED;EACA;;EAEA;EACAqB,SAAS,EAAE;IACT;AACJ;AACA;AACA;IACIC,OAAO,EAAEf,OAAO,CAACC,GAAG,CAACC,EAAE,GAAG,0BAA0B,GAAG,UAAU;IACjEc,IAAI,EAAE,IAAI;IACVC,mBAAmB,EAAE,CAACjB,OAAO,CAACC,GAAG,CAACC;EACpC;AACF,CAAC;AAEDgB,MAAM,CAACC,OAAO,GAAGxB,MAAM"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"872e90207ee0c67f412a5d276e89a58f1617e405","contentHash":"b18ba77d1df5e5fd711bf543dbfe1df63ec1b05131d45dd7b6d6cac8cb92f709"},"/home/juli22/dbwebb-kurser/jsramverk-alla/jsramverk/vue-project-j/e2e/vue.spec.js":{"path":"/home/juli22/dbwebb-kurser/jsramverk-alla/jsramverk/vue-project-j/e2e/vue.spec.js","statementMap":{"0":{"start":{"line":7,"column":4},"end":{"line":7,"column":39}},"1":{"start":{"line":11,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":14,"column":2},"end":{"line":14,"column":23}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":77}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":32},"end":{"line":11,"column":33}},"loc":{"start":{"line":13,"column":6},"end":{"line":16,"column":1}},"line":13}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"names":["test","expect","require","page","goto","locator","toHaveText"],"sources":["vue.spec.js"],"sourcesContent":["// const { test, expect } = require('@playwright/test');\nconst { test, expect } = require('playwright-test-coverage');\n\n// See here how to get started:\n// https://playwright.dev/docs/intro\ntest('visits the app root url', async ({ page }) => {\n  await page.goto('/');\n  await expect(page.locator('div.delayed > h1')).toHaveText('Försenade tåg');\n})\n"],"mappings":";;AAAA;AACA,MAAM;EAAEA,IAAI;EAAEC;AAAO,CAAC,GAAGC,OAAO,CAAC,0BAA0B,CAAC;;AAE5D;AACA;AACAF,IAAI,CAAC,yBAAyB,EAAE,OAAO;EAAEG;AAAK,CAAC,KAAK;EAClD,MAAMA,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC;EACpB,MAAMH,MAAM,CAACE,IAAI,CAACE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAACC,UAAU,CAAC,eAAe,CAAC;AAC5E,CAAC,CAAC"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a7e158be16126705236734a6dca2921fd6cf842a","contentHash":"a1620ef02f0a124a454e58fc8c6f6781b4eaaf48fd7515f958172cbd8ba7a5fb"}}